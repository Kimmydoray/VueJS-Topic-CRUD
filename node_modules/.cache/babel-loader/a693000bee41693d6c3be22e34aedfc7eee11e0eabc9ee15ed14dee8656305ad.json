{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  border: \"1\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  colspan: \"3\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = [\"onUpdate:modelValue\"];\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  key: 1\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  style: {\n    \"margin-top\": \"10px\"\n  }\n};\nconst _hoisted_15 = [\"disabled\"];\nconst _hoisted_16 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"All Topics\", -1)), _createVNode(_component_router_link, {\n    to: \"/add\"\n  }, {\n    default: _withCtx(() => _cache[4] || (_cache[4] = [_createElementVNode(\"button\", {\n      style: {\n        \"margin-bottom\": \"10px\"\n      }\n    }, \"Add New Topic\", -1)])),\n    _: 1\n  }), _createElementVNode(\"table\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"GUID\"), _createElementVNode(\"th\", null, \"Name\"), _createElementVNode(\"th\", null, \"Action\")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedTopics, item => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: item.guid\n    }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(item.guid), 1), _createElementVNode(\"td\", null, _toDisplayString(item.name), 1), _createElementVNode(\"td\", null, [_createVNode(_component_router_link, {\n      to: '/edit/' + item.guid\n    }, {\n      default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"Edit\")])),\n      _: 2\n    }, 1032, [\"to\"]), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTopic(item.guid),\n      style: {\n        \"background\": \"red\",\n        \"color\": \"white\",\n        \"margin-left\": \"10px\"\n      }\n    }, \" Delete \", 8, _hoisted_2), _createElementVNode(\"button\", {\n      onClick: $event => $options.toggleComments(item.guid),\n      style: {\n        \"margin-left\": \"10px\"\n      }\n    }, _toDisplayString($data.expandedTopic === item.guid ? 'Hide Comments' : 'View Comments'), 9, _hoisted_3)])]), $data.expandedTopic === item.guid ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_4, [_createElementVNode(\"td\", _hoisted_5, [item.comments && item.comments.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.comments, (comment, i) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: i\n      }, [_createElementVNode(\"strong\", null, _toDisplayString(comment.by), 1), _cache[6] || (_cache[6] = _createTextVNode(\": \")), !comment.isEditing ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString(comment.comment), 1)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n        key: 1,\n        \"onUpdate:modelValue\": $event => comment.editedText = $event\n      }, null, 8, _hoisted_8)), [[_vModelText, comment.editedText]]), _createElementVNode(\"em\", null, \"(\" + _toDisplayString(comment.date) + \")\", 1), !comment.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 2,\n        onClick: $event => $options.editComment(item.guid, i)\n      }, \"Edit\", 8, _hoisted_9)) : (_openBlock(), _createElementBlock(\"button\", {\n        key: 3,\n        onClick: $event => $options.saveComment(item.guid, i)\n      }, \"Save\", 8, _hoisted_10)), _createElementVNode(\"button\", {\n        onClick: $event => $options.deleteComment(item.guid, i),\n        style: {\n          \"margin-left\": \"10px\"\n        }\n      }, \"Delete\", 8, _hoisted_11)]);\n    }), 128))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \"No comments available.\")), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newCommentText = $event),\n      placeholder: \"Write a comment...\"\n    }, null, 512), [[_vModelText, $data.newCommentText]]), _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newCommentAuthor = $event),\n      placeholder: \"Your name\"\n    }, null, 512), [[_vModelText, $data.newCommentAuthor]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.addComment(item.guid)\n    }, \"Add Comment\", 8, _hoisted_13)])])])) : _createCommentVNode(\"\", true)], 64);\n  }), 128))])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.prevPage && $options.prevPage(...args)),\n    disabled: $data.currentPage === 1\n  }, \"Previous\", 8, _hoisted_15), _createElementVNode(\"span\", null, \" Page \" + _toDisplayString($data.currentPage) + \" of \" + _toDisplayString($options.totalPages), 1), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    disabled: $data.currentPage === $options.totalPages\n  }, \"Next\", 8, _hoisted_16)])]);\n}","map":{"version":3,"names":["border","key","colspan","style","_createElementBlock","_createElementVNode","_createVNode","_component_router_link","to","default","_withCtx","_cache","_","_hoisted_1","_Fragment","_renderList","$options","paginatedTopics","item","guid","_toDisplayString","name","_createTextVNode","onClick","$event","deleteTopic","_hoisted_2","toggleComments","$data","expandedTopic","_hoisted_3","_hoisted_4","_hoisted_5","comments","length","_hoisted_6","comment","i","by","isEditing","_hoisted_7","editedText","_hoisted_8","date","editComment","_hoisted_9","saveComment","_hoisted_10","deleteComment","_hoisted_11","_hoisted_12","newCommentText","placeholder","newCommentAuthor","addComment","_hoisted_13","_createCommentVNode","_hoisted_14","args","prevPage","disabled","currentPage","_hoisted_15","totalPages","nextPage","_hoisted_16"],"sources":["/Applications/MAMP/htdocs/vue-crud-app/VueJS-Topic-CRUD/src/components/ListTopic.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>All Topics</h2>\n    <router-link to=\"/add\">\n      <button style=\"margin-bottom: 10px;\">Add New Topic</button>\n    </router-link>\n\n    <table border=\"1\">\n      <thead>\n        <tr>\n          <th>GUID</th>\n          <th>Name</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <template v-for=\"(item) in paginatedTopics\" :key=\"item.guid\">\n          <tr>\n            <td>{{ item.guid }}</td>\n            <td>{{ item.name }}</td>\n            <td>\n              <router-link :to=\"'/edit/' + item.guid\">Edit</router-link>\n              <button @click=\"deleteTopic(item.guid)\" style=\"background: red; color: white; margin-left: 10px;\">\n                Delete\n              </button>\n              <button @click=\"toggleComments(item.guid)\" style=\"margin-left: 10px;\">\n                {{ expandedTopic === item.guid ? 'Hide Comments' : 'View Comments' }}\n              </button>\n            </td>\n          </tr>\n          <tr v-if=\"expandedTopic === item.guid\">\n            <td colspan=\"3\">\n              <ul v-if=\"item.comments && item.comments.length\">\n                <li v-for=\"(comment, i) in item.comments\" :key=\"i\">\n                  <strong>{{ comment.by }}</strong>: \n                  <span v-if=\"!comment.isEditing\">{{ comment.comment }}</span>\n                  <input v-else v-model=\"comment.editedText\" />\n\n                  <em>({{ comment.date }})</em>\n\n                  <button v-if=\"!comment.isEditing\" @click=\"editComment(item.guid, i)\">Edit</button>\n                  <button v-else @click=\"saveComment(item.guid, i)\">Save</button>\n                  <button @click=\"deleteComment(item.guid, i)\" style=\"margin-left: 10px;\">Delete</button>\n                </li>\n              </ul>\n              <p v-else>No comments available.</p>\n\n              <!-- Add new comment -->\n              <div>\n                <input v-model=\"newCommentText\" placeholder=\"Write a comment...\" />\n                <input v-model=\"newCommentAuthor\" placeholder=\"Your name\" />\n                <button @click=\"addComment(item.guid)\">Add Comment</button>\n              </div>\n            </td>\n          </tr>\n        </template>\n      </tbody>\n    </table>\n\n    <!-- Pagination Controls -->\n    <div style=\"margin-top: 10px;\">\n      <button @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</button>\n      <span> Page {{ currentPage }} of {{ totalPages }} </span>\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      topics: JSON.parse(localStorage.getItem('topics')) || [],\n      expandedTopic: null,\n      currentPage: 1,\n      perPage: 20, // Show 20 topics per page\n      newCommentText: '',\n      newCommentAuthor: '',\n    };\n  },\n  computed: {\n    sortedTopics() {\n      return [...this.topics].reverse();\n    },\n    totalPages() {\n      return Math.ceil(this.sortedTopics.length / this.perPage);\n    },\n    paginatedTopics() {\n      const start = (this.currentPage - 1) * this.perPage;\n      return this.sortedTopics.slice(start, start + this.perPage);\n    }\n  },\n  methods: {\n    deleteTopic(guid) {\n      if (confirm(\"Are you sure you want to delete this topic?\")) {\n        this.topics = this.topics.filter(topic => topic.guid !== guid);\n        this.saveTopics();\n      }\n    },\n    toggleComments(guid) {\n      this.expandedTopic = this.expandedTopic === guid ? null : guid;\n    },\n    addComment(guid) {\n      if (!this.newCommentText.trim() || !this.newCommentAuthor.trim()) {\n        alert(\"Please enter both comment and author.\");\n        return;\n      }\n\n      const topic = this.topics.find(topic => topic.guid === guid);\n      if (topic) {\n        topic.comments.push({\n          comment: this.newCommentText,\n          date: new Date().toISOString(),\n          by: this.newCommentAuthor,\n        });\n        this.saveTopics();\n      }\n\n      this.newCommentText = '';\n      this.newCommentAuthor = '';\n    },\n    editComment(guid, index) {\n      const topic = this.topics.find(topic => topic.guid === guid);\n      if (topic) {\n        topic.comments[index].isEditing = true;\n        topic.comments[index].editedText = topic.comments[index].comment;\n      }\n    },\n    saveComment(guid, index) {\n      const topic = this.topics.find(topic => topic.guid === guid);\n      if (topic) {\n        topic.comments[index].comment = topic.comments[index].editedText;\n        topic.comments[index].isEditing = false;\n        this.saveTopics();\n      }\n    },\n    deleteComment(guid, index) {\n      if (confirm(\"Are you sure you want to delete this comment?\")) {\n        const topic = this.topics.find(topic => topic.guid === guid);\n        if (topic) {\n          topic.comments.splice(index, 1);\n          this.saveTopics();\n        }\n      }\n    },\n    saveTopics() {\n      localStorage.setItem('topics', JSON.stringify(this.topics));\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}